// this could be even moved to config file
tximport StateMachine from "./../../tx_samples/state_machine/state_machine.tx"

style:
    // todo
    {"selector": "node.state"
        , "style": {
            "width": "label",
            "text-margin-y": 25, "padding": "35px", "text-outline-width": "2", "text-outline-color": "white",
            "font-weight": "bold"
        }
    }
    // compound node shapes
    ,{"selector": "node.event-container"
        , "style": {
            "width": "label",
            "text-margin-y": 25, "padding": "35px", "text-outline-width": "2", "text-outline-color": "white",
            "font-weight": "bold"
        }
    }
    // contained nodes when compound nodes selected
    ,{"selector": "node:selected node"
    , "style": {
            "background-color": "red", "border-color": "red", "color": "red"
        }
    }
:style end

view StateMachine as None

view State as Roundrectangle
{
    label: State.name
    {
        font: black 21 italic
        background: white 0.2
    }
    link
    {
        // from: this // implicit if not defined
        to: State.transitions.to_state
        {
            arrow: black 2 triangle filled
            distance: 5
        }
        label: State.transitions.event.name
        {
            font: 18
        }
    }
    background: white 0.4
    border: black 4 solid
    selected
    {
        background: red 0.1
        border: red 4
        label: State.name
        {
            font: red 21 italic
        }
    }
}

view Command as Vee child of State
{
    label: Command.name
    {
        font: 18
        background: white 1 round
    }
    background: black 0
    border: white 0 solid 0
}

view Event as Vee inside Roundrectangle where this = StateMachine.resetEvents
{
    label: Event.name
    {
        font: 18
        background: white 1 round
    }
    background: black 0
    border: white 0 solid 0
    container
    {
        label: 'Reset Events:'
        {
            font: black 21 italic
            background: white 0.2
        }
        background: white 0.4
        border: black 4 solid
        selected
        {
            label: 'Reset Events:'
            {
                font: red 21 italic
            }
            background: red 0.1
            border: red 4
        }
    }
}